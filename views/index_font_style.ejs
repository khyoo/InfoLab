<!doctype html>
<html lang="en">

<head>
    <!-- ol -->
    <link rel="stylesheet" href="/gis/ol/ol.css" type="text/css">
    <script type="text/javascript" src="/gis/ol/ol.js"></script>

    <!-- ol-ext -->
    <link rel="stylesheet" href="/gis/ol-ext/ol-ext.min.css" />
    <script type="text/javascript" src="/gis/ol-ext/ol-ext.min.js"></script>

    <link rel="stylesheet" href="/gis/ol-ext/styles/style.css" />
    <link rel="stylesheet" href="/gis/ol-ext/styles/css/fontmaki.css" />
    <link rel="stylesheet" href="/gis/ol-ext/styles/css/fontmaki2.css" />

    <!-- FontAwesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <!-- jQuery -->
    <script type="text/javascript" src="https://code.jquery.com/jquery-1.11.0.min.js"></script>

    <!-- ol-ext maki and fontawesome defintions used in fontsymbol -->
    <script type="text/javascript" src="/gis/ol-ext/extra/FontMakiDef.js"></script>
    <script type="text/javascript" src="/gis/ol-ext/extra/FontMaki2Def.js"></script>
    <script type="text/javascript" src="/gis/ol-ext/extra/FontAwesomeDef.js"></script>

    <style>
        .options i.standard,
        .options .fa {
            height: 1em;
            margin: 0;
            padding: 0.5em;
            width: 1em;
            cursor: pointer;
        }

        .options i.standard,
        .options .fa:before {
            margin: 0;
            border: 1px solid transparent;
            display: inline-block;
            height: 1em;
            width: 1em;
            text-align: center;
            padding: 2px;
        }

        .options i.standard {
            font-style: normal;
            font-weight: bold;
            font-family: sherif;
            padding-bottom: 0.1em;
            line-height: 0.9em;
            margin-left: 0.35em;
        }

        .options i.standard:hover,
        .options .fa:hover:before {
            border: 1px solid #369;
            border-radius: 100%;
            transform: scale(3);
            -webkit-transform: scale(3);
            background: #fff;
        }
    </style>

    <title>Info Lab Testbed</title>
</head>

<body>
    <!-- <h2>Info Lab</h2>
    <div id="map" class="map"></div> -->

    <!-- DIV pour la carte -->
    <div id="map" style="width:100%; height:800px;"></div>
   
    <div class="options">
        <h2>Options:</h2>
        <ul>
            <li>
                Symbol color:
                <select id="color" onchange="vector.changed();">
                    <option value="" selected="selected">use stroke color</option>
                    <option value="black">black</option>
                    <option value="red">red</option>
                    <option value="orange">orange</option>
                    <option value="yellow">yellow</option>
                    <option value="blue">blue</option>
                </select>
            </li>
            <li>
                form:
                <select id="form" onchange="vector.changed();">
                    <option value="none" selected="selected">none</option>
                    <option value="circle">circle</option>
                    <option value="poi">poi</option>
                    <option value="bubble">bubble</option>
                    <option value="marker">marker</option>
                    <option value="coma">coma</option>
                    <option value="shield">shield</option>
                    <option value="blazon">blazon</option>
                    <option value="bookmark">bookmark</option>
                    <option value="hexagon">hexagon</option>
                    <option value="diamond">diamond</option>
                    <option value="triangle">triangle</option>
                    <option value="sign">sign</option>
                    <option value="ban">ban</option>
                    <option value="lozenge">lozenge</option>
                    <option value="square">square</option>
                </select>
            </li>
            <li>
                fill color:
                <select id="fill" onchange="vector.changed();">
                    <option value="white">white</option>
                    <option value="red">red</option>
                    <option value="green">green</option>
                    <option value="#fd0">yellow</option>
                    <option value="navy" selected="selected">navy</option>
                </select>
            </li>
            <li>
                style:
                <select id="style" onchange="vector.changed();">
                    <option value="">unset</option>
                    <option value="bold">bold</option>
                    <option value="italic">italic</option>
                    <option value="bold italic">bold italic</option>
                </select>
            </li>
            <li>
                stroke color:
                <select id="stroke" onchange="vector.changed();">
                    <option value="transparent">transparent</option>
                    <option value="white" selected="selected">white</option>
                    <option value="black">black</option>
                    <option value="red">red</option>
                    <option value="orange">orange</option>
                    <option value="yellow">yellow</option>
                    <option value="blue">blue</option>
                </select>
            </li>
            <li>
                border: <input id="border" type="number" style="width:4em" value=3 onchange="vector.changed();" />
            </li>
            <li>
                radius: <input id="radius" type="number" style="width:4em" value=15 onchange="vector.changed();" />
            </li>
            <li>
                fontSize: <input id="fontsize" type="number" style="width:4em" value=1 onchange="vector.changed();"
                    step="0.1" />
            </li>
            <li>
                rotation: <input id="rotation" type="number" style="width:4em" value=0 onchange="vector.changed();"
                    step="1" />
            </li>
            <li>
                <input id="rwview" type="checkbox" onchange="vector.changed();" /><label for="rwview">
                    rotateWithView</label>
            </li>
            <li>
                <input id="offset" type="checkbox" onchange="vector.changed();" /><label for="offset"> offset</label>
            </li>
            <li>
                <input id="gradient" type="checkbox" onchange="vector.changed();" /><label for="gradient"> gradient
                    (avaliable on form)</label>
            </li>
            <li>
                <input id="shadow" type="checkbox" onchange="vector.changed();" /><label for="shadow"> shadow</label>
            </li>
        </ul>
        <h2>Select a font glyph:</h2>
        <h2>Standard</h2>
        <i class="standard" onclick="setFont('1')">1</i>
        <i class="standard" onclick="setFont('2')">2</i>
        <i class="standard" onclick="setFont('3')">3</i>
        <i class="standard" onclick="setFont('8')">8</i>
        <i class="standard" onclick="setFont('9')">9</i>
        <i class="standard" onclick="setFont('0')">0</i>
        <i class="standard" onclick="setFont('A')">A</i>
        <i class="standard" onclick="setFont('B')">B</i>
        <i class="standard" onclick="setFont('C')">C</i>
        <i class="standard" onclick="setFont('X')">X</i>
        <i class="standard" onclick="setFont('Y')">Y</i>
        <i class="standard" onclick="setFont('Z')">Z</i>
        <i class="standard" onclick="setFont('i')">i</i>
        <i class="standard" onclick="setFont('$')">$</i>
        <i class="standard" onclick="setFont('€')">€</i>
        <i class="standard" onclick="setFont('@')">@</i>
        <i class="standard" onclick="setFont('&')">&</i>
        <i class="standard" onclick="setFont('&#x2600;')">&#x2600;</i>
        <i class="standard" onclick="setFont('&#x2601;')">&#x2601;</i>
        <i class="standard" onclick="setFont('&#x2603;')">&#x2603;</i>
        <i class="standard" onclick="setFont('&#x2604;')">&#x2604;</i>
        <i class="standard" onclick="setFont('&#x263A;')">&#x263A;</i>
        <i class="standard" onclick="setFont('&#x2639;')">&#x2639;</i>
    </div>


    <script type="text/javascript">
          var map = new ol.Map({
            target: 'map',
            layers: [
              new ol.layer.Tile({
                source: new ol.source.OSM()
              })
            ],
            view: new ol.View({
              center: ol.proj.fromLonLat([37.41, 8.82]),
              zoom: 4
            })
          });


        // Using FontAwesome > 5, set package here
        // ol.style.FontSymbol.prototype.defs.fonts.FontAwesome.font = "Font Awesome 5 Free";

        // // Layers
        // var layer = new ol.layer.Tile({ source: new ol.source.Stamen({ layer: 'watercolor' }) });

        // // The map
        // var map = new ol.Map({
        //     target: 'map',
        //     view: new ol.View({
        //         zoom: 6,
        //         center: [166326, 5992663]
        //     }),
        //     layers: [layer]
        // });


        // Get font glyph
        // var theGlyph = "maki-building";
        var theGlyph = "fa-star";
        function setFont(g) {
            if (typeof (g) == 'string') theGlyph = g;
            else theGlyph = $(this).data("glyph");
            vector.changed();
        }
      
        // Style function
        function getFeatureStyle(feature) {
            var st = [];
            // Shadow style
            if ($("#shadow").prop('checked')) st.push(new ol.style.Style({
                image: new ol.style.Shadow({
                    radius: 15,
                    blur: 5,
                    offsetX: 0,
                    offsetY: 0,
                    fill: new ol.style.Fill({
                        color: "rgba(0,0,0,0.5)"
                    })
                })
            }));
            // Font style
            st.push(new ol.style.Style({
                image: new ol.style.FontSymbol({
                    form: $("#form").val(), //"hexagone", 
                    gradient: $("#gradient").prop('checked'),
                    glyph: theGlyph,//car[Math.floor(Math.random()*car.length)], 
                    fontSize: Number($("#fontsize").val()),
                    fontStyle: $("#style").val(),
                    radius: Number($("#radius").val()),
                    //offsetX: -15,
                    rotation: Number($("#rotation").val()) * Math.PI / 180,
                    rotateWithView: $("#rwview").prop('checked'),
                    offsetY: $("#offset").prop('checked') ? -Number($("#radius").val()) : 0,
                    color: $("#color").val(),
                    fill: new ol.style.Fill({
                        color: $("#fill").val()
                    }),
                    stroke: new ol.style.Stroke({
                        color: $("#stroke").val(),
                        width: Number($("#border").val())
                    })
                }),
                stroke: new ol.style.Stroke({
                    width: 2,
                    color: '#f80'
                }),
                fill: new ol.style.Fill({
                    color: [255, 136, 0, 0.6]
                })
            }));
            return st;
        }

        function getStyle(feature, resolution) {
            var s = getFeatureStyle(feature);
            // Ne pas recalculer
            //feature.setStyle(s);
            return s;

        };

        // GeoJSON layer
        var vectorSource = new ol.source.Vector({
            url: '/data/fond_guerre.geojson',
            projection: 'EPSG:3857',
            format: new ol.format.GeoJSON(),
            // attributions: ["&copy; <a href='https://data.culture.gouv.fr/explore/dataset/fonds-de-la-guerre-14-18-extrait-de-la-base-memoire'>data.culture.gouv.fr</a>"],
            // logo: "https://www.data.gouv.fr/s/avatars/37/e56718abd4465985ddde68b33be1ef.jpg"
        });

        var vector = new ol.layer.Vector({
            // name: '1914-18',
            // preview: "http://www.culture.gouv.fr/Wave/image/memoire/2445/sap40_z0004141_v.jpg",
            source: vectorSource,
            // y ordering
            renderOrder: ol.ordering.yOrdering(),
            style: getStyle
        })

        map.addLayer(vector);


        //
        function setOptions(glyph, form, color, scolor, fcolor, border, radius, fsize, offset, gradient, shadow) {
            theGlyph = glyph;
            $("#style").val('');
            $("#color").val(color);
            $("#form").val(form);
            $("#fill").val(fcolor);
            $("#stroke").val(scolor);
            $("#border").val(border);
            $("#radius").val(radius);
            $("#fontsize").val(fsize || 1);
            $("#offset").prop("checked", offset || false);
            $("#gradient").prop("checked", gradient || false);
            $("#shadow").prop("checked", shadow || false);
            // Refresh
            vector.changed();
        }

        // Redraw layer when fonts are loaded
        $(window).on("load", function () { console.log("loaded"); vector.changed(); });


    </script>
</body>

</html>